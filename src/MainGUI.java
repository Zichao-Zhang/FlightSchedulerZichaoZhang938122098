/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author zhang
 */
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainGUI
     */
    private Booking currentBooking = new Booking();
    private Waitlist currentWaitlist = new Waitlist();
    private BookingQueries bookingQueries= new BookingQueries();;
    private WaitlistQueries waitlistQueries = new WaitlistQueries();;
    private List<Booking> results;
    private Flight flight = new Flight();
    private Day day = new Day();
   
     
    
    public MainGUI() {
       super("Flight Scheduler");
        initComponents();
        
       BookFlightCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
       BookDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
       
      
      WaitlisStatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
      StatusFlightNumCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
      StatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
     CancelBookingDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
    DropFlightCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        CustomerNameTextfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BookFlightCombo = new javax.swing.JComboBox<>();
        bookingButton = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        BookDateCombo = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        CancelCustomerTextfield = new javax.swing.JTextField();
        CancelCustomerDayButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        CancelBookingDateCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        StatusFlightNumCombo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        StatusDateCombo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        WaitlisStatusDateCombo = new javax.swing.JComboBox<>();
        FlightByDateSubmitBotton = new javax.swing.JButton();
        DisplayWaitlist = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StatusDisplayTextArea = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        CustomerStatusTextfield = new javax.swing.JTextField();
        CustomerStatusButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        addFlightNumTextfield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        addFIghtSeatTextfield = new javax.swing.JTextField();
        AddFlightBotton = new javax.swing.JButton();
        addDateSpinner = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        addDateButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        DropFlightButton = new javax.swing.JButton();
        DropFlightCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("FLIGHT SCHEDULER");

        jLabel2.setText("Customer:");

        CustomerNameTextfield.setColumns(20);

        jLabel3.setText("Flight:");

        BookFlightCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bookingButton.setText(" Book");
        bookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Date:");

        BookDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        BookDateCombo.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                BookDateComboComponentAdded(evt);
            }
        });

        jLabel18.setText("Booking");

        jLabel19.setText("Cancellation");

        jLabel20.setText("Customer:");

        CancelCustomerTextfield.setColumns(10);
        CancelCustomerTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelCustomerTextfieldActionPerformed(evt);
            }
        });

        CancelCustomerDayButton.setText("Cancel");
        CancelCustomerDayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelCustomerDayButtonActionPerformed(evt);
            }
        });

        jLabel21.setText("Date:");

        CancelBookingDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BookDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookFlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustomerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(bookingButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelCustomerTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelBookingDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(CancelCustomerDayButton)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(CustomerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookFlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(8, 8, 8)
                .addComponent(bookingButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CancelCustomerTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(CancelBookingDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(CancelCustomerDayButton)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Booking/Cancellation", jPanel1);

        jLabel5.setText("FLight By Date");

        jLabel6.setText("Flight:");

        StatusFlightNumCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Date:");

        StatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Wait List");

        jLabel9.setText("Date");

        WaitlisStatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        WaitlisStatusDateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaitlisStatusDateComboActionPerformed(evt);
            }
        });

        FlightByDateSubmitBotton.setText("Submit");
        FlightByDateSubmitBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightByDateSubmitBottonActionPerformed(evt);
            }
        });

        DisplayWaitlist.setText("Submit");
        DisplayWaitlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayWaitlistActionPerformed(evt);
            }
        });

        StatusDisplayTextArea.setColumns(20);
        StatusDisplayTextArea.setRows(5);
        jScrollPane1.setViewportView(StatusDisplayTextArea);

        jLabel14.setText("Customer");

        jLabel15.setText("Customer Name:");

        CustomerStatusTextfield.setColumns(10);

        CustomerStatusButton.setText("Submit");
        CustomerStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerStatusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(WaitlisStatusDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DisplayWaitlist))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(StatusFlightNumCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StatusDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FlightByDateSubmitBotton))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel8))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(CustomerStatusTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CustomerStatusButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StatusFlightNumCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(StatusDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FlightByDateSubmitBotton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(WaitlisStatusDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DisplayWaitlist))
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustomerStatusTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustomerStatusButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Status", jPanel2);

        jLabel10.setText("Add Flight");

        jLabel11.setText("Flight Number:");

        addFlightNumTextfield.setColumns(5);
        addFlightNumTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightNumTextfieldActionPerformed(evt);
            }
        });

        jLabel12.setText("Seats:");

        addFIghtSeatTextfield.setColumns(5);
        addFIghtSeatTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFIghtSeatTextfieldActionPerformed(evt);
            }
        });

        AddFlightBotton.setText("Add ");
        AddFlightBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFlightBottonActionPerformed(evt);
            }
        });

        addDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        jLabel13.setText("Add Date");

        addDateButton.setText("Add");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("Drop Flight");

        jLabel17.setText("FLight Number:");

        DropFlightButton.setText("Drop");
        DropFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropFlightButtonActionPerformed(evt);
            }
        });

        DropFlightCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(addFlightNumTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addFIghtSeatTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(AddFlightBotton))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(61, 61, 61)
                                            .addComponent(jLabel13)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addDateButton)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(DropFlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144)
                                .addComponent(DropFlightButton)))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(195, 195, 195))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(addFlightNumTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addFIghtSeatTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AddFlightBotton)))
                .addGap(17, 17, 17)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDateSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DropFlightButton)
                        .addComponent(DropFlightCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
        );

        jTabbedPane1.addTab("Add/Drop", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisplayWaitlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayWaitlistActionPerformed
        // TODO add your handling code here:
        Date waitlistDate = (Date)WaitlisStatusDateCombo.getSelectedItem();
        
        SimpleDateFormat formater = new SimpleDateFormat("yyy-MM-dd");
        String date=formater.format((Date)WaitlisStatusDateCombo.getSelectedItem());
       
        List <Waitlist> waitlistByDate = WaitlistQueries.getWaitlistByDate(waitlistDate);
        String title="";
        title+="Waitlist on "+date+"\n";
        String displayText = "";
        for(Waitlist waitlistEntry:waitlistByDate){
            
            displayText+=waitlistEntry.getCustomer()+" on "+waitlistEntry.getFlightNum() +"\n";
        }
        if(displayText==""){
            displayText+="No result has found";
        }
        StatusDisplayTextArea.setText(title+displayText);
    }//GEN-LAST:event_DisplayWaitlistActionPerformed

    private void FlightByDateSubmitBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightByDateSubmitBottonActionPerformed
        // TODO add your handling code here:
        Date BookingDate = (Date)StatusDateCombo.getSelectedItem();
        String BookingFN = (String)StatusFlightNumCombo.getSelectedItem();
        List <String> bookingName = BookingQueries.getBookedName(BookingFN,BookingDate);
        String displayText = "";
        String title="";
        SimpleDateFormat formater = new SimpleDateFormat("yyy-MM-dd");
        String date=formater.format((Date)StatusDateCombo.getSelectedItem());
        title += "Customers have booked for Flight "+(String)StatusFlightNumCombo.getSelectedItem()+" on "+date+":\n";
        for(int i =0;i<bookingName.size();i++){
            displayText+=bookingName.get(i) +"\n";
        }
        if(displayText==""){
            displayText+="No result has found";
        }
            
        StatusDisplayTextArea.setText(title+displayText);
    }//GEN-LAST:event_FlightByDateSubmitBottonActionPerformed

    private void WaitlisStatusDateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaitlisStatusDateComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WaitlisStatusDateComboActionPerformed

    private void BookDateComboComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_BookDateComboComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_BookDateComboComponentAdded

    private void bookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingButtonActionPerformed
        // TODO add your handling code here:
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());//creat timestamp
        int totalSeat = bookingQueries.getAvailableSeat((String)BookFlightCombo.getSelectedItem());
        int bookedSeat = bookingQueries.getFLightSeats((String)BookFlightCombo.getSelectedItem(),(Date)BookDateCombo.getSelectedItem());
        int result;
        if((totalSeat-bookedSeat)>0)
        {
            result = bookingQueries.addBooking((String)BookFlightCombo.getSelectedItem(),
                CustomerNameTextfield.getText(),(Date)BookDateCombo.getSelectedItem(),currentTimestamp);
        }
        else
        {
            result = waitlistQueries.addWaistlist((String)BookFlightCombo.getSelectedItem(),
                CustomerNameTextfield.getText(),(Date)BookDateCombo.getSelectedItem(),currentTimestamp);
        }
        if (result ==1)
        {
            JOptionPane.showMessageDialog(this, "Your Booking is Successful!", "Booking", JOptionPane.PLAIN_MESSAGE);
        }
        else if (result ==2)
        {
             JOptionPane.showMessageDialog(this, "You have been added to the Waitlist!", "Waitlist", JOptionPane.PLAIN_MESSAGE);
        }
        else
        {
           JOptionPane.showMessageDialog(this, "Something is Wrong!", "Oops...", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_bookingButtonActionPerformed

    private void addFlightNumTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightNumTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFlightNumTextfieldActionPerformed

    private void addFIghtSeatTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFIghtSeatTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFIghtSeatTextfieldActionPerformed

    private void AddFlightBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFlightBottonActionPerformed
        // TODO add your handling code here:
        int result;
        result = Flight.addFlight((String)addFlightNumTextfield.getText(),Integer.parseInt(addFIghtSeatTextfield.getText()));
         if (result ==1)
        {
            JOptionPane.showMessageDialog(this, "Your Flight has been added!", "Add Flight", JOptionPane.PLAIN_MESSAGE);
            BookFlightCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
            StatusFlightNumCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
            DropFlightCombo.setModel(new javax.swing.DefaultComboBoxModel(Flight.getAllFlight().toArray()));
        }
        else
        {
             JOptionPane.showMessageDialog(this, "Something is wrong! Unable to add the flight.", "Oops...", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_AddFlightBottonActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd"); 
        String spinnerValue = formater.format(addDateSpinner.getValue()); 
        Date day = Date.valueOf(spinnerValue);
        
        int result;
        result = Day.addDay(day);
        
        if (result==1)
        {
            JOptionPane.showMessageDialog(this, "The Date has been added!", "Add Date", JOptionPane.PLAIN_MESSAGE);
             BookDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
             WaitlisStatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
             StatusDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
             CancelBookingDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Day.getAllDay().toArray()));
        }
        else
        {
             JOptionPane.showMessageDialog(this, "Something is wrong! Unable to add the Date.", "Oops...", JOptionPane.PLAIN_MESSAGE);
        }
            
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void CustomerStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerStatusButtonActionPerformed
        // TODO add your handling code here:
        String customerName = (String)CustomerStatusTextfield.getText();
        String display="Flights customer has booked:\n";
        List <Booking> allBooking = BookingQueries.getBookingCustomerName(customerName);
         List <Booking> allWaitlsit = WaitlistQueries.getWaitlistCustomerName(customerName);
        for (Booking bookingEntry:allBooking)
        {
            display+= bookingEntry.getFlightNum()+"\t"+bookingEntry.getDate()+"\n";
        }
        display+="Flight Customer is waitlisted for:\n";
        for (Booking waitlistEntry:allWaitlsit)
        {
            display+=waitlistEntry.getFlightNum()+"\t"+waitlistEntry.getDate()+"\n";
        }
        
        StatusDisplayTextArea.setText(display);
    }//GEN-LAST:event_CustomerStatusButtonActionPerformed

    private void DropFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropFlightButtonActionPerformed
        // TODO add your handling code here:
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());//creat timestamp for booking
        //first delete flight from flighting table
        int delete=Flight.cancelBooking((String)DropFlightCombo.getSelectedItem());
        if (delete==1)
            JOptionPane.showMessageDialog(this,(String)DropFlightCombo.getSelectedItem()+ " has been dropped", "Drop Flight", JOptionPane.PLAIN_MESSAGE);
        else
            JOptionPane.showMessageDialog(this,(String)DropFlightCombo.getSelectedItem()+ " could not be dropped", "Drop Flight", JOptionPane.PLAIN_MESSAGE);
        //delete customer from the waitlist table
        List<Waitlist> waitlistCancel = waitlistQueries.getWaitlistByFN((String)DropFlightCombo.getSelectedItem());
        String cancelWaitlist="";
        
        for (Waitlist waitlistEntry:waitlistCancel)
        {
            SimpleDateFormat formater = new SimpleDateFormat("yyy-MM-dd");
            String date=formater.format(waitlistEntry.getDate());
            cancelWaitlist+=waitlistEntry.getCustomer()+" get cancelled form waitlist on "+date+"\n";
        }
        int deleteWaitlist=waitlistQueries.cancelWaitlsitByFN((String)DropFlightCombo.getSelectedItem());
        
        //rebook customer 
        List<Booking> rebookCustomer;
        rebookCustomer = bookingQueries.getBookingByFN((String)DropFlightCombo.getSelectedItem());
        String rebookMessage="";
        List<String> availableFN =Flight.getAllFlight();
         for (Booking bookingEntry:rebookCustomer)
         {
            
             int totAvailableFlight = availableFN.size();
             SimpleDateFormat formater = new SimpleDateFormat("yyy-MM-dd");
            String date=formater.format(bookingEntry.getDate());
             for(String flightEntry:availableFN)
             {
                int totalSeat = bookingQueries.getAvailableSeat(flightEntry);
                int bookedSeat = bookingQueries.getFLightSeats(flightEntry,bookingEntry.getDate());
                int result;
                if((totalSeat-bookedSeat)>0)
                {
                    result = bookingQueries.addBooking(flightEntry,
                    bookingEntry.getCustomer(),bookingEntry.getDate(),currentTimestamp);
                    rebookMessage+=bookingEntry.getCustomer()+" has been re-booked to "+flightEntry +" on " +date+"\n";
                    break;
                 }
                if(totAvailableFlight==1)
                {
                    rebookMessage+=bookingEntry.getCustomer()+" on the Booking list is cancelled on "+date+"\n";
                }
                totAvailableFlight--;
             }
         }
         
          JOptionPane.showMessageDialog(this,rebookMessage+cancelWaitlist , "RE-BOOK INFORMATION", JOptionPane.PLAIN_MESSAGE);
          //delete flight from booking
          int deleteBooking = bookingQueries.cancelBookingByFN((String)DropFlightCombo.getSelectedItem());
        
    }//GEN-LAST:event_DropFlightButtonActionPerformed

    private void CancelCustomerTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelCustomerTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelCustomerTextfieldActionPerformed

    private void CancelCustomerDayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelCustomerDayButtonActionPerformed
        // TODO add your handling code here:
         java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        int result=0;
        List <String> canceledFN=null;
        String flightNum=null;
        //get canceled Flight Number 
        canceledFN = bookingQueries.getCanceledFN(CancelCustomerTextfield.getText(),(Date)CancelBookingDateCombo.getSelectedItem());
        //delete
        result = bookingQueries.cancelBooking(CancelCustomerTextfield.getText(),(Date)CancelBookingDateCombo.getSelectedItem());
        if (result==1)
        {
            JOptionPane.showMessageDialog(this, "The Cancellation is Sucessful from Booking!", "Cancellation", JOptionPane.PLAIN_MESSAGE);
            flightNum=canceledFN.get(0);
           //book person from waitlist 
           List <Waitlist> waitlistResult=null;
           waitlistResult= waitlistQueries.getWaitlistByFNandDate(flightNum, (Date)CancelBookingDateCombo.getSelectedItem());
           if(waitlistResult!=null)
           {
               Waitlist personAdded;
              personAdded = waitlistResult.get(0);
               int addResult  = bookingQueries.addBooking(personAdded.getFlightNum(),personAdded.getCustomer(),personAdded.getDate(),currentTimestamp);
               String message = "";
               message +=personAdded.getCustomer()+" on the Waitlist for Flight "+personAdded.getFlightNum()+ " has been booked.";
               if(addResult ==1)
               {
                   JOptionPane.showMessageDialog(this, message, "Booking", JOptionPane.PLAIN_MESSAGE);
                   int deleteWLentries = WaitlistQueries.cancelWaitlsit(personAdded.getCustomer(),(Date)CancelBookingDateCombo.getSelectedItem());
               }
               else
                   JOptionPane.showMessageDialog(this, "Something wrong with Rebooking", "Booking", JOptionPane.PLAIN_MESSAGE);
           }
        }
        else
        {
            result = WaitlistQueries.cancelWaitlsit(CancelCustomerTextfield.getText(),(Date)CancelBookingDateCombo.getSelectedItem());
            if(result==1)
                JOptionPane.showMessageDialog(this, "The Cancellation is Sucessful from Waitlist!", "Cancellation", JOptionPane.PLAIN_MESSAGE);
            else 
                JOptionPane.showMessageDialog(this, "The Customer is not Booked for This Flight.", "Cancellation", JOptionPane.PLAIN_MESSAGE);
        }
        
    }//GEN-LAST:event_CancelCustomerDayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFlightBotton;
    private javax.swing.JComboBox<String> BookDateCombo;
    private javax.swing.JComboBox<String> BookFlightCombo;
    private javax.swing.JComboBox<String> CancelBookingDateCombo;
    private javax.swing.JButton CancelCustomerDayButton;
    private javax.swing.JTextField CancelCustomerTextfield;
    private javax.swing.JTextField CustomerNameTextfield;
    private javax.swing.JButton CustomerStatusButton;
    private javax.swing.JTextField CustomerStatusTextfield;
    private javax.swing.JButton DisplayWaitlist;
    private javax.swing.JButton DropFlightButton;
    private javax.swing.JComboBox<String> DropFlightCombo;
    private javax.swing.JButton FlightByDateSubmitBotton;
    private javax.swing.JComboBox<String> StatusDateCombo;
    private javax.swing.JTextArea StatusDisplayTextArea;
    private javax.swing.JComboBox<String> StatusFlightNumCombo;
    private javax.swing.JComboBox<String> WaitlisStatusDateCombo;
    private javax.swing.JButton addDateButton;
    private javax.swing.JSpinner addDateSpinner;
    private javax.swing.JTextField addFIghtSeatTextfield;
    private javax.swing.JTextField addFlightNumTextfield;
    private javax.swing.JToggleButton bookingButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
